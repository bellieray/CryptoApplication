package com.example.data

import com.example.domain.model.CryptoDetail
import com.example.domain.model.*
import com.google.common.annotations.VisibleForTesting

const val CRYPTO_RESPONSE_FILE_NAME = "CryptoResponse.json"
const val SINGLE_CRYPTO_RESPONSE_FILE_NAME = "SingleCryptoResponse.json"
const val COIN_MARKETS_RESPONSE_FILE_NAME = "CoinMarketsResponse.json"

@VisibleForTesting
val cryptoCurrencies = listOf(
    Crypto("01coin", "zoc", "01coin"),
    Crypto("0chain", "zcn", "Zus"),
    Crypto("0vix-protocol", "vix", "0VIX Protocol"),
    Crypto("0x", "zrx", "0x Protocol"),
    Crypto("0x0-ai-ai-smart-contract", "0x0", "0x0.ai: AI Smart Contract"),
    Crypto("0x1-tools-ai-multi-tool", "0x1", "0x1.tools: AI Multi-tool"),
    Crypto("0xauto-io-contract-auto-deployer", "0xa", "0xAuto.io : Contract Auto Deployer"),
    Crypto("0xcoco", "coco", "0xCoco")
)

@VisibleForTesting
val cryptoDetailResponse = CryptoDetailResponse(
    localization = Localization(
        de = "German localization",
        hi = "Hindi localization",
        no = "Norwegian localization",
        ru = "Russian localization",
        fi = "Finnish localization",
        pt = "Portuguese localization",
        bg = "Bulgarian localization",
        lt = "Lithuanian localization",
        hr = "Croatian localization",
        fr = "French localization",
        hu = "Hungarian localization",
        uk = "Ukrainian localization",
        sk = "Slovak localization",
        sl = "Slovenian localization",
        id = "Indonesian localization",
        sv = "Swedish localization",
        ko = "Korean localization",
        zhTw = "Traditional Chinese localization",
        el = "Greek localization",
        en = "English localization",
        it = "Italian localization",
        es = "Spanish localization",
        zh = "Chinese localization",
        cs = "Czech localization",
        ar = "Arabic localization",
        vi = "Vietnamese localization",
        th = "Thai localization",
        ja = "Japanese localization",
        pl = "Polish localization",
        da = "Danish localization",
        he = "Hebrew localization",
        nl = "Dutch localization",
        tr = "Turkish localization"
    ),
    symbol = "BTC",
    sentimentVotesUpPercentage = 78.5,
    assetPlatformId = "ethereum",
    publicNotice = "Important notice about the asset",
    description = Description(
        de = "German description of the asset",
        hi = "Hindi description of the asset",
        no = "Norwegian description of the asset",
        ru = "Russian description of the asset",
        fi = "Finnish description of the asset",
        pt = "Portuguese description of the asset",
        bg = "Bulgarian description of the asset",
        lt = "Lithuanian description of the asset",
        hr = "Croatian description of the asset",
        fr = "French description of the asset",
        hu = "Hungarian description of the asset",
        uk = "Ukrainian description of the asset",
        sk = "Slovak description of the asset",
        sl = "Slovenian description of the asset",
        id = "Indonesian description of the asset",
        sv = "Swedish description of the asset",
        ko = "Korean description of the asset",
        zhTw = "Traditional Chinese description of the asset",
        el = "Greek description of the asset",
        en = "English description of the asset",
        it = "Italian description of the asset",
        es = "Spanish description of the asset",
        zh = "Chinese description of the asset",
        cs = "Czech description of the asset",
        ar = "Arabic description of the asset",
        vi = "Vietnamese description of the asset",
        th = "Thai description of the asset",
        ja = "Japanese description of the asset",
        pl = "Polish description of the asset",
        ro = "Romanian description of the asset",
        da = "Danish description of the asset",
        he = "Hebrew description of the asset",
        nl = "Dutch description of the asset",
        tr = "Turkish description of the asset"
    ),
    marketCapRank = 1,
    contractAddress = "0x1234567890abcdef",
    sentimentVotesDownPercentage = 21.5,
    liquidityScore = 88.9,
    additionalNotices = emptyList(),
    coingeckoScore = 9.8,
    id = "bitcoin",
    categories = emptyList(),
    genesisDate = "2009-01-03",
    image = Image(
        small = "https://example.com/images/btc-small.png",
        large = "https://example.com/images/btc-large.png",
        thumb = "https://example.com/images/btc-thumb.png",
    ),
    lastUpdated = "2023-07-31T08:01:37.759Z",
    countryOrigin = "United States",
    publicInterestScore = 75.2,
    statusUpdates = emptyList(),
    communityScore = 8.7,
    developerScore = 9.5,
    marketData = MarketData(
        priceChangePercentage24h = 5.3,
        priceChange24h = 500.0,
        mcapToTvlRatio = null,
        marketCapRank = 1,
        roi = null,
        atlDate = AtlDate(
            usd = "2009-01-03",
            xdr = null,
            eos = null,
            sgd = null,
            vef = null,
            bnb = null,
            eth = null,
            nzd = null,
            brl = null,
            xag = null,
            chf = null,
            mxn = null,
            clp = null,
            bits = null,
            zar = null,
            vnd = null,
            xau = null,
            aud = null,
            ils = null,
            idr = null,
            xrp = null,
            jsonMemberTry = null,
            hkd = null,
            twd = null,
            aed = null,
            eur = null,
            dkk = null,
            bch = null,
            cad = null,
            myr = null,
            dot = null,
            link = null,
            mmk = null,
            nok = null,
            btc = null,
            lkr = null,
            ngn = null,
            czk = null,
            pkr = null,
            sek = null,
            ltc = null,
            uah = null,
            bhd = null,
            ars = null,
            sar = null,
            inr = null,
            cny = null,
            thb = null,
            krw = null,
            jpy = null,
            bdt = null,
            pln = null,
            gbp = null,
            bmd = null,
            huf = null,
            xlm = null,
            sats = null,
            kwd = null,
            php = null,
            yfi = null,
            rub = null,
        ),
        marketCap = MarketCap(
            usd = 1000000000.0,
            xdr = null,
            eos = null,
            sgd = null,
            vef = null,
            bnb = null,
            eth = null,
            nzd = null,
            brl = null,
            xag = null,
            chf = null,
            mxn = null,
            clp = null,
            bits = null,
            zar = null,
            vnd = null,
            xau = null,
            aud = null,
            ils = null,
            idr = null,
            xrp = null,
            jsonMemberTry = null,
            hkd = null,
            twd = null,
            aed = null,
            eur = null,
            dkk = null,
            bch = null,
            cad = null,
            myr = null,
            dot = null,
            link = null,
            mmk = null,
            nok = null,
            btc = null,
            lkr = null,
            ngn = null,
            czk = null,
            pkr = null,
            sek = null,
            ltc = null,
            uah = null,
            bhd = null,
            ars = null,
            sar = null,
            inr = null,
            cny = null,
            thb = null,
            krw = null,
            jpy = null,
            bdt = null,
            pln = null,
            gbp = null,
            bmd = null,
            huf = null,
            xlm = null,
            sats = null,
            kwd = null,
            php = null,
            yfi = null,
            rub = null,
        ),
        circulatingSupply = 18000000.0,
        lastUpdated = "2023-07-31T08:01:37.759Z",
        totalValueLocked = null,
        totalSupply = 21000000.0,
        maxSupply = 21000000.0,
        currentPrice = CurrentPrice(
            usd = 40000.0,
            xdr = null,
            eos = null,
            sgd = null,
            vef = null,
            bnb = null,
            eth = null,
            nzd = null,
            brl = null,
            xag = null,
            chf = null,
            mxn = null,
            clp = null,
            bits = null,
            zar = null,
            vnd = null,
            xau = null,
            aud = null,
            ils = null,
            idr = null,
            xrp = null,
            jsonMemberTry = null,
            hkd = null,
            twd = null,
            aed = null,
            eur = null,
            dkk = null,
            bch = null,
            cad = null,
            myr = null,
            dot = null,
            link = null,
            mmk = null,
            nok = null,
            btc = null,
            lkr = null,
            ngn = null,
            czk = null,
            pkr = null,
            sek = null,
            ltc = null,
            uah = null,
            bhd = null,
            ars = null,
            sar = null,
            inr = null,
            cny = null,
            thb = null,
            krw = null,
            jpy = null,
            bdt = null,
            pln = null,
            gbp = null,
            bmd = null,
            huf = null,
            xlm = null,
            sats = null,
            kwd = null,
            php = null,
            yfi = null,
            rub = null,
        ),
        priceChangePercentage1y = 120.0,
    ),
    blockTimeInMinutes = 10,
    name = "Bitcoin",
    coingeckoRank = 1,
    hashingAlgorithm = "SHA-256",
)

@VisibleForTesting
val cryptoDetail = CryptoDetail(
    id = "bitcoin",
    name = "Bitcoin",
    symbol = "BTC",
    price = 40000.0,
    description = "blabla",
    imageUrl = "https://example.com/images/btc-large.png",
    hashingAlgorithm = "SHA-256",
    changeLast24H = 5.3,
    isFavorite = true
)

@VisibleForTesting
const val CRYPTO_ID = "0xcoco"

@VisibleForTesting
const val REQUEST_DELAY_TIME = "20"

@VisibleForTesting
const val TEST_EMAIL = "test@gmail.com"

@VisibleForTesting
const val TEST_PASSWORD = "password"

